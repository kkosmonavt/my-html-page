name: Deploy-To-Ubuntu-Server
run-name: ${{ github.actor }} is deploying new changes ðŸš€

on: 
  push:
    branches: 
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest

    env:
      REMOTE_HOST: ${{ secrets.REMOTE_HOST }}   
      REMOTE_USER: ${{ secrets.REMOTE_USER }}   
      TARGET_DIR: ${{ secrets.TARGET_DIR }}     
      REMOTE_PORT: ${{ secrets.REMOTE_PORT }} 
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare SSH key and known_hosts
        run: |
          set -e
          # Create ~/.ssh directory
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Write private key (from GitHub Secrets)
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

          # Start ssh-agent and add key
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/deploy_key

          # Set default port if empty
          SSH_PORT="${REMOTE_PORT:-22}"

          # Add host to known_hosts (avoid interactive prompt)
          ssh-keyscan -H -p "$SSH_PORT" "$REMOTE_HOST" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Connect to server and pull latest changes
        run: |
          SSH_PORT="${REMOTE_PORT:-22}"
          ssh -p $SSH_PORT -i ~/.ssh/deploy_key -o StrictHostKeyChecking=yes $REMOTE_USER@$REMOTE_HOST "
            cd $TARGET_DIR
            echo 'Pulling latest changes from main branch...'
            git fetch origin
            git reset --hard origin/main
            git pull origin main
            echo 'Latest changes pulled successfully!'
          "

      - name: Copy index.html to destination directory
        run: |
          SSH_PORT="${REMOTE_PORT:-22}"
          ssh -p $SSH_PORT -i ~/.ssh/deploy_key -o StrictHostKeyChecking=yes $REMOTE_USER@$REMOTE_HOST "
            echo 'Copying index.html to /home/sanita/my-project/...'
            cp $TARGET_DIR/index.html /home/sanita/my-project/
            echo 'File copied successfully!'
            echo 'Checking if file exists in destination:'
            ls -la /home/sanita/my-project/index.html
          "

      - name: Verify deployment
        run: |
          SSH_PORT="${REMOTE_PORT:-22}"
          ssh -p $SSH_PORT -i ~/.ssh/deploy_key -o StrictHostKeyChecking=yes $REMOTE_USER@$REMOTE_HOST "
            echo '=== Deployment Verification ==='
            echo 'Current directory content:'
            ls -la $TARGET_DIR/
            echo 'Destination directory content:'
            ls -la /home/sanita/my-project/
            echo 'File content check:'
            head -5 /home/sanita/my-project/index.html
            echo 'Deployment completed successfully! ðŸŽ‰'
          "

      - name: Clean up SSH key
        run: |
          rm -f ~/.ssh/deploy_key
          ssh-add -D
          echo 'SSH key cleaned up!'





